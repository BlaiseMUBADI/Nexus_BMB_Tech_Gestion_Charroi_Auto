package nexus_bmb_soft.database;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Test pour v√©rifier la structure de la base de donn√©es
 * et diagnostiquer les probl√®mes de compatibilit√©
 */
public class TestStructureDB {
    
    public static void main(String[] args) {
        System.out.println("=== DIAGNOSTIC STRUCTURE BASE DE DONN√âES ===\n");
        
        try {
            verifierStructureVehicule();
            listerTables();
        } catch (Exception e) {
            System.err.println("‚ùå Erreur lors du diagnostic : " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
     * V√©rifie la structure de la table vehicule
     */
    private static void verifierStructureVehicule() throws SQLException {
        System.out.println("üîç Structure de la table 'vehicule' :");
        
        try (Connection conn = DatabaseConnection.getConnection()) {
            DatabaseMetaData metaData = conn.getMetaData();
            ResultSet columns = metaData.getColumns(null, null, "vehicule", null);
            
            System.out.println("Colonnes trouv√©es :");
            boolean hasDisponible = false;
            boolean hasStatut = false;
            
            while (columns.next()) {
                String columnName = columns.getString("COLUMN_NAME");
                String columnType = columns.getString("TYPE_NAME");
                String isNullable = columns.getString("IS_NULLABLE");
                
                System.out.println("   ‚Ä¢ " + columnName + " (" + columnType + ") - Nullable: " + isNullable);
                
                if ("disponible".equals(columnName)) hasDisponible = true;
                if ("statut".equals(columnName)) hasStatut = true;
            }
            
            System.out.println("\nüìä Analyse de compatibilit√© :");
            System.out.println("   ‚Ä¢ Champ 'disponible' (boolean) : " + (hasDisponible ? "‚úÖ Pr√©sent" : "‚ùå Absent"));
            System.out.println("   ‚Ä¢ Champ 'statut' (enum) : " + (hasStatut ? "‚úÖ Pr√©sent" : "‚ùå Absent"));
            
            if (!hasDisponible) {
                System.out.println("\n‚ö†Ô∏è  SOLUTION : Ex√©cutez le script 'migration_compatibilite.sql'");
            }
        }
    }
    
    /**
     * Liste toutes les tables de la base
     */
    private static void listerTables() throws SQLException {
        System.out.println("\nüìã Tables disponibles dans la base :");
        
        try (Connection conn = DatabaseConnection.getConnection()) {
            DatabaseMetaData metaData = conn.getMetaData();
            ResultSet tables = metaData.getTables(null, null, null, new String[]{"TABLE"});
            
            while (tables.next()) {
                String tableName = tables.getString("TABLE_NAME");
                System.out.println("   ‚Ä¢ " + tableName);
            }
        }
    }
}