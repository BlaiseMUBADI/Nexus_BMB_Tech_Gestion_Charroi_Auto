/**
 * Test pour v√©rifier la liaison correcte entre les tables vehicule et affectation
 * bas√©e sur la colonne statut de la table affectation.
 * 
 * PROBL√àME INITIAL:
 * - Les ComboBox affichaient tous les v√©hicules, m√™me ceux avec des affectations actives
 * - La disponibilit√© n'√©tait pas bas√©e sur les affectations r√©elles
 * - Incoh√©rence entre la table vehicule.disponible et les affectations en cours
 * 
 * NOUVELLE APPROCHE:
 * - VehiculeDAO.getVehiculesDisponibles() : Query SQL avec LEFT JOIN sur affectations
 * - UtilisateurDAO.getConducteursDisponibles() : Query SQL avec LEFT JOIN sur affectations
 * - Filtrage bas√© sur affectation.statut = 'en_cours'
 * - Seuls les √©l√©ments sans affectation active apparaissent dans les ComboBox
 * 
 * REQU√äTES SQL UTILIS√âES:
 * 
 * 1. V√âHICULES DISPONIBLES:
 * SELECT v.* FROM vehicule v 
 * LEFT JOIN affectation a ON v.id = a.vehicule_id AND a.statut = 'en_cours'
 * WHERE a.vehicule_id IS NULL 
 * ORDER BY v.matricule
 * 
 * 2. CONDUCTEURS DISPONIBLES:
 * SELECT u.* FROM utilisateur u 
 * LEFT JOIN affectation a ON u.id = a.conducteur_id AND a.statut = 'en_cours'
 * WHERE u.role IN ('CONDUCTEUR', 'CONDUCTEUR_SENIOR') 
 * AND u.statut = 'ACTIF' 
 * AND a.conducteur_id IS NULL 
 * ORDER BY u.nom
 * 
 * R√âSULTAT ATTENDU:
 * - ComboBox v√©hicules: seulement ceux sans affectation statut='en_cours'
 * - ComboBox conducteurs: seulement ceux sans affectation statut='en_cours'  
 * - Compteurs: refl√®tent le nombre r√©el d'√©l√©ments disponibles
 * - Interface synchronis√©e avec l'√©tat r√©el de la base de donn√©es
 */

import java.sql.*;

public class TestLiaisonVehiculeAffectation {
    
    public static void main(String[] args) {
        System.out.println("=== TEST DE LIAISON V√âHICULE-AFFECTATION ===");
        System.out.println();
        
        testRequeteVehiculesDisponibles();
        System.out.println();
        testRequeteConducteursDisponibles();
        System.out.println();
        
        System.out.println("üöÄ INSTRUCTIONS DE TEST:");
        System.out.println("1. Lancez FormNouvelleAffectation");
        System.out.println("2. V√©rifiez que SEULS les v√©hicules sans affectation active apparaissent");
        System.out.println("3. V√©rifiez que SEULS les conducteurs sans affectation active apparaissent");
        System.out.println("4. Cr√©ez une affectation et v√©rifiez la mise √† jour automatique");
        System.out.println("5. Les compteurs doivent refl√©ter les nombres r√©els");
    }
    
    private static void testRequeteVehiculesDisponibles() {
        System.out.println("üìã TEST: Requ√™te v√©hicules disponibles");
        System.out.println("SQL: SELECT v.* FROM vehicule v");
        System.out.println("     LEFT JOIN affectation a ON v.id = a.vehicule_id AND a.statut = 'en_cours'");
        System.out.println("     WHERE a.vehicule_id IS NULL");
        System.out.println("     ORDER BY v.matricule");
        System.out.println();
        System.out.println("‚úÖ Cette requ√™te ne retourne QUE les v√©hicules sans affectation active");
        System.out.println("‚úÖ Bas√©e sur la colonne affectation.statut = 'en_cours'");
        System.out.println("‚úÖ Ignore compl√®tement vehicule.disponible (source d'incoh√©rence)");
    }
    
    private static void testRequeteConducteursDisponibles() {
        System.out.println("üë• TEST: Requ√™te conducteurs disponibles");
        System.out.println("SQL: SELECT u.* FROM utilisateur u");
        System.out.println("     LEFT JOIN affectation a ON u.id = a.conducteur_id AND a.statut = 'en_cours'");
        System.out.println("     WHERE u.role IN ('CONDUCTEUR', 'CONDUCTEUR_SENIOR')");
        System.out.println("     AND u.statut = 'ACTIF'");
        System.out.println("     AND a.conducteur_id IS NULL");
        System.out.println("     ORDER BY u.nom");
        System.out.println();
        System.out.println("‚úÖ Cette requ√™te ne retourne QUE les conducteurs sans affectation active");
        System.out.println("‚úÖ Bas√©e sur la colonne affectation.statut = 'en_cours'");
        System.out.println("‚úÖ Double filtrage: statut utilisateur ET absence d'affectation");
    }
}